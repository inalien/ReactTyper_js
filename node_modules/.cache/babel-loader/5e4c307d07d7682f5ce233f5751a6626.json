{"ast":null,"code":"var _jsxFileName = \"/Users/inalien/Documents/InalienProjects/typer-js/src/Typer/typerEffect.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useCallback, useEffect } from \"react\";\nimport \"./typer_style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Typer = props => {\n  _s();\n\n  const {\n    loop,\n    speed,\n    delay,\n    words\n  } = props;\n  const [counter, setCounter] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [isDeleting, setIsDeleting] = useState(false); // Typing speed, where the speed includes the speed of typing words, the speed of deleting words, and the speed of delay, which are used as the interval parameter of each round of setTimeout, and the default is 100 when you start typing.\n\n  const [typingSpeed, setTypingSpeed] = useState(100);\n  const handleTyping = useCallback(() => {\n    // If it is loop, use module to find a word in the list of words each time\n    // Otherwise keep the same as counter, because if there is no loop, counter will also stop counting at the end, and index will stop at the end\n    const index = loop ? counter % words.length : counter;\n    const fullWord = words[index];\n\n    if (isDeleting) {\n      // Set the delete speed to twice the typing speed\n      setTypingSpeed(speed / 2); // Set the letter to be deleted from the right, by intercepting the current each time (one letter less than the previous word)\n\n      setText(fullWord.substring(0, text.length - 1)); // If all deletions have been completed at this time, start a new round\n\n      if (text === \"\") {\n        setIsDeleting(false);\n        setCounter(counter + 1);\n      }\n    } else {\n      setTypingSpeed(speed); // Set to start typing from left to right\n\n      setText(fullWord.substring(0, text.length + 1)); // if all letters have been typed\n\n      if (text === fullWord) {\n        if (!loop && counter >= words.length - 1) {\n          // if there is no loop, exit\n          return;\n        }\n\n        setIsDeleting(true);\n        setTypingSpeed(delay);\n      }\n    }\n  }, [counter, delay, isDeleting, loop, speed, text, words]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      handleTyping();\n    }, typingSpeed);\n    return () => clearTimeout(timer);\n  }, [handleTyping, typingSpeed]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"blinking-cursor\",\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Typer, \"3i5VdA26i3ooOqnGALpVtEXJt5I=\");\n\n_c = Typer;\nexport default Typer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Typer\");","map":{"version":3,"sources":["/Users/inalien/Documents/InalienProjects/typer-js/src/Typer/typerEffect.js"],"names":["Typer","props","loop","speed","delay","words","counter","setCounter","useState","text","setText","isDeleting","setIsDeleting","typingSpeed","setTypingSpeed","handleTyping","useCallback","index","length","fullWord","substring","useEffect","timer","setTimeout","clearTimeout"],"mappings":";;;AAAA;AAEA,OAAO,mBAAP;;;AAEA,MAAMA,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,MAAgCJ,KAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBF,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,KAAD,CAA5C,CAJuB,CAMvB;;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,GAAD,CAA9C;AAEA,QAAMO,YAAY,GAAGC,WAAW,CAAC,MAAM;AACrC;AACA;AAEA,UAAMC,KAAK,GAAGf,IAAI,GAAGI,OAAO,GAAGD,KAAK,CAACa,MAAnB,GAA4BZ,OAA9C;AACA,UAAMa,QAAQ,GAAGd,KAAK,CAACY,KAAD,CAAtB;;AAEA,QAAIN,UAAJ,EAAgB;AACd;AAEAG,MAAAA,cAAc,CAACX,KAAK,GAAG,CAAT,CAAd,CAHc,CAKd;;AAEAO,MAAAA,OAAO,CAACS,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsBX,IAAI,CAACS,MAAL,GAAc,CAApC,CAAD,CAAP,CAPc,CASd;;AAEA,UAAIT,IAAI,KAAK,EAAb,EAAiB;AACfG,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAL,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD;AACF,KAfD,MAeO;AACLQ,MAAAA,cAAc,CAACX,KAAD,CAAd,CADK,CAGL;;AAEAO,MAAAA,OAAO,CAACS,QAAQ,CAACC,SAAT,CAAmB,CAAnB,EAAsBX,IAAI,CAACS,MAAL,GAAc,CAApC,CAAD,CAAP,CALK,CAOL;;AAEA,UAAIT,IAAI,KAAKU,QAAb,EAAuB;AACrB,YAAI,CAACjB,IAAD,IAASI,OAAO,IAAID,KAAK,CAACa,MAAN,GAAe,CAAvC,EAA0C;AACxC;AAEA;AACD;;AACDN,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,cAAc,CAACV,KAAD,CAAd;AACD;AACF;AACF,GAzC+B,EAyC7B,CAACE,OAAD,EAAUF,KAAV,EAAiBO,UAAjB,EAA6BT,IAA7B,EAAmCC,KAAnC,EAA0CM,IAA1C,EAAgDJ,KAAhD,CAzC6B,CAAhC;AA2CAgB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BR,MAAAA,YAAY;AACb,KAFuB,EAErBF,WAFqB,CAAxB;AAIA,WAAO,MAAMW,YAAY,CAACF,KAAD,CAAzB;AACD,GANQ,EAMN,CAACP,YAAD,EAAeF,WAAf,CANM,CAAT;AAQA,sBACE;AAAA,4BACE;AAAA,gBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlED;;GAAMT,K;;KAAAA,K;AAoEN,eAAeA,KAAf","sourcesContent":["// import React, { useState, useCallback, useEffect } from \"react\";\n\nimport \"./typer_style.css\";\n\nconst Typer = (props) => {\n  const { loop, speed, delay, words } = props;\n  const [counter, setCounter] = useState(0);\n  const [text, setText] = useState(\"\");\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // Typing speed, where the speed includes the speed of typing words, the speed of deleting words, and the speed of delay, which are used as the interval parameter of each round of setTimeout, and the default is 100 when you start typing.\n  const [typingSpeed, setTypingSpeed] = useState(100);\n\n  const handleTyping = useCallback(() => {\n    // If it is loop, use module to find a word in the list of words each time\n    // Otherwise keep the same as counter, because if there is no loop, counter will also stop counting at the end, and index will stop at the end\n\n    const index = loop ? counter % words.length : counter;\n    const fullWord = words[index];\n\n    if (isDeleting) {\n      // Set the delete speed to twice the typing speed\n\n      setTypingSpeed(speed / 2);\n\n      // Set the letter to be deleted from the right, by intercepting the current each time (one letter less than the previous word)\n\n      setText(fullWord.substring(0, text.length - 1));\n\n      // If all deletions have been completed at this time, start a new round\n\n      if (text === \"\") {\n        setIsDeleting(false);\n        setCounter(counter + 1);\n      }\n    } else {\n      setTypingSpeed(speed);\n\n      // Set to start typing from left to right\n\n      setText(fullWord.substring(0, text.length + 1));\n\n      // if all letters have been typed\n\n      if (text === fullWord) {\n        if (!loop && counter >= words.length - 1) {\n          // if there is no loop, exit\n\n          return;\n        }\n        setIsDeleting(true);\n        setTypingSpeed(delay);\n      }\n    }\n  }, [counter, delay, isDeleting, loop, speed, text, words]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      handleTyping();\n    }, typingSpeed);\n\n    return () => clearTimeout(timer);\n  }, [handleTyping, typingSpeed]);\n\n  return (\n    <span>\n      <span>{text}</span>\n      <span className=\"blinking-cursor\">|</span>\n    </span>\n  );\n};\n\nexport default Typer;\n"]},"metadata":{},"sourceType":"module"}